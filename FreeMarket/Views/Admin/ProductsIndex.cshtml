@using FreeMarket.Models
@model ProductCollection
@{
    ViewBag.Title = "Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h2 class="text-center"><span class="glyphicon glyphicon-edit text-success"></span>&nbsp;Products</h2>
<hr />

<div class="row well">
    <h2 class="text-center">Full Product Range Search</h2>
    @using (Html.BeginForm("FilterProductAdmin", "Admin", FormMethod.Post, new { @id = "productSearchForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(model => model.SelectedDepartment, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.SelectedDepartment, Model.Departments, "Choose", new { @class = "form-control" })
            </div>
        </div>

        <div id="textSearch" style="display:none">
            <div class="form-group">
                @Html.LabelFor(model => model.ProductSearchCriteria, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ProductSearchCriteria, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductSearchCriteria)
                </div>
            </div>
            <div class="form-group">

                <button type="submit" class="btn btn-success" name="Search">Search</button>
            </div>
        </div>

        if (Model.Products != null && Model.Products.Count > 0)
        {
            <div>
                Showing @Model.Products.Count results
            </div>
        }
    }
</div>

@Html.ActionLink("Create New", "CreateProduct", null, new { @class = "freemarket-link" })

@if (Model.Products.Count > 0)
{
    <table class="table table-bordered-custom">

        <tr>
            <th class="col-sm-1"></th>
            <th class="col-sm-1">Product Number</th>
            @*<th class="col-sm-1">Image</th>*@
            <th class="col-sm-2">Description</th>
            <th class="col-sm-2">Price Range</th>
            <th class="col-sm-2">Active</th>
        </tr>

        @foreach (Product product in Model.Products)
        {
            <tr class="well">
                <td class="text-center">
                    @Html.ActionLink("Edit", "EditProduct", new { productNumber = product.ProductNumber, supplierNumber = product.SupplierNumber }, new { @class = "freemarket-link" })
                </td>
                <td>
                    @Html.DisplayFor(model => product.ProductNumber)
                </td>
                @*<td>
                    <img width="256" height="192" class="img-thumbnail" src="@Url.Action("RenderImage", "Image", new { id = product.MainImageNumber})" alt="@product.Description" title="@product.Description" />
                </td>*@
                <td>
                    @Html.DisplayFor(model => product.Description) 
                </td>
                <td>
                    <div>@String.Format("{0:C} - {1:C}", product.MinPrice, product.MaxPrice)</div>
                </td>
                <td>
                    @product.Activated
                </td>
            </tr>
        }

    </table>

    <div class="text-center">
        @Html.ActionLink("Back", "Index", "Admin", new { @class = "btn btn-success" })
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        if ($('#SelectedDepartment').val() == 9999) {
            $('#textSearch').show();
        }
        else {
            $('#textSearch').hide();
        }
    });

    $('#SelectedDepartment').change(function () {
        if ($('#SelectedDepartment').val() != 9999)
        {
            this.form.submit();
        }
        else
        {
            $('#textSearch').show();
        }
    });

    $(document).ready(function () {
        $('#productSearchForm')
                .bootstrapValidator({
                    feedbackIcons: {
                        valid: 'glyphicon glyphicon-ok',
                        invalid: 'glyphicon glyphicon-remove',
                        validating: 'glyphicon glyphicon-refresh'
                    },
                    fields: {
                        'ProductSearchCriteria': {
                            validators: {
                                stringLength: {
                                    max: 256,
                                    message: "The maximum input allowed is 256 characters."
                                },
                                regexp: {
                                    regexp: /^[A-Za-z0-9\,\s]+$/,
                                    message: 'Alphabetic characters, spaces, commas and numbers only'
                                }
                            }
                        }

                    }
                })
    });

</script>



