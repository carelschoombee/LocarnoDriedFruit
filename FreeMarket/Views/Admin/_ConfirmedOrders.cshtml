@using FreeMarket.Models
@model List<OrderHeader>

<table class="table table-bordered-custom table-responsive">

    @if (Model != null && Model.Count != 0)
    {
        <tr>
            <th>
                #
            </th>
            <th>
                PDF
            </th>
            <th>
                Customer Name
            </th>
            <th>
                Total
            </th>
            <th>
                Total Weight
            </th>
            <th>
                Delivery Type
            </th>
            <th>
                Delivery Address
            </th>
            <th>
                Delivery Date
            </th>
            <th>
                Dispatch and send SMS
            </th>
        </tr>
        for (int i = 0; i < Model.Count; i++)
        {
            
            <tr>
                <td data-label="#:" class="text-center">
                    @Html.ActionLink(Model[i].OrderNumber.ToString(), "ViewOrder", "Admin", new { orderNumber = Model[i].OrderNumber, customerNumber = Model[i].CustomerNumber }, new { @class = "freemarket-link" })
                    @Html.HiddenFor(model => Model[i].OrderNumber)
                </td>
                <td class="text-center hidden-xs"><a class="freemarket-link" href="@Url.Action("DownLoadReportConfirmed", "Admin", new { orderNumber = Model[i].OrderNumber })"><span class="glyphicon glyphicon-download"></span></a></td>
                <td class="text-center">@Html.ActionLink(Html.Action("GetCustomerName", "Admin", new { orderNumber = Model[i].OrderNumber }).ToString(), "ViewCustomer", "Admin", new { customerNumber = Model[i].CustomerNumber }, new { @class = "freemarket-link" })</td>
                <td data-label="Total:" class="text-center">@string.Format("{0:C}", Model[i].TotalOrderValue)</td>
                <td data-label="KG:" class="text-center">@Html.Action("GetTotalWeightOfOrder", "Admin", new { orderNumber = Model[i].OrderNumber })</td>
                <td class="text-center">
                    <div>@Model[i].DeliveryType - Tracking Code:</div>
                    <div>@Html.EditorFor(c => Model[i].TrackingCodes)</div>
                    <div>@Html.ValidationMessageFor(c => Model[i].TrackingCodes, "", new { @class = "text-danger" })</div>
                </td>
                <td class="text-center"><span style="white-space:pre-line">@Model[i].DeliveryAddress</span></td>
                @if (Model[i].DeliveryDate == null)
                {
                    <td class="text-center">Not Applicable</td>
                }
                else if (Model[i].DeliveryDate < DateTime.Now)
                {
                    <td class="text-center"><font class="text-danger">@string.Format("{0:f}", Model[i].DeliveryDate)</font></td>
                }
                else
                {
                    <td class="text-center">@string.Format("{0:f}", Model[i].DeliveryDate)</td>
                }
                <td data-label="Dispatch:" class="text-center">@Html.EditorFor(c => Model[i].Selected)</td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td style="font-size: 20px">
                There are no new confirmed orders at the moment.
            </td>
        </tr>
    }
</table>

@if (Model != null && Model.Count > 0)
{
    <div class="col-sm-offset-5">
        <input type="submit" value="Save/Update" class="btn btn-primary" />
    </div>
}